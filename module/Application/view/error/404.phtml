<?php
use Zend\Mvc\Application;

$this->headLink()->appendStylesheet('/css/2col-large-left.css', 'screen');
$this->layout()->title = 'Page Not Found';
$this->layout()->navText = 'Page Not Found';
$this->layout()->isStandalone = true;
?>

<section class="col first-col">

    <h1>Page Not Found</h1>

    <p>The page you are looking for might have been removed, had its
        name changed,<br>or is temporarily unavailable.</p>

    <?php
    switch (!empty($this->reason) ? $this->reason : null) :
        case Application::ERROR_CONTROLLER_CANNOT_DISPATCH:
            $reasonMessage = 'The requested controller was unable to dispatch the request.';
            break;
        case Application::ERROR_MIDDLEWARE_CANNOT_DISPATCH:
            $reasonMessage = 'The requested middleware was unable to dispatch the request.';
            break;
        case Application::ERROR_CONTROLLER_NOT_FOUND:
            $reasonMessage = 'The requested controller could not be mapped to an existing controller class.';
            break;
        case Application::ERROR_CONTROLLER_INVALID:
            $reasonMessage = 'The requested controller was not dispatchable.';
            break;
        case Application::ERROR_ROUTER_NO_MATCH:
            $reasonMessage = 'The requested URL could not be matched by routing.';
            break;
        default:
            $reasonMessage = 'We cannot determine at this time why a 404 was generated.';
            break;
    endswitch;
    if (!empty($this->reason)) : ?>
    <p><?php echo $reasonMessage ?></p>
    <?php endif; ?>

    <?php if (!empty($this->controller)) : ?>
    <dl>
        <dt>Controller:</dt>
        <dd>
            <?php echo $this->escapeHtml($this->controller) ?>
            <?php if (!empty($this->controller_class) && $this->controller_class != $this->controller) : ?>
            <?php echo sprintf('(resolves to %s)', $this->escapeHtml($this->controller_class)) ?>
            <?php endif; ?>
        </dd>
    </dl>
    <?php endif ?>

    <?php if (!empty($this->display_exceptions)) : ?>
    <?php if (isset($this->exception) && ($this->exception instanceof \Exception || $this->exception instanceof \Error)) : ?>

    <hr/>

    <h2>Additional information:</h2>
    <h3><?php echo get_class($this->exception) ?></h3>
    <dl>
        <dt>File:</dt>
        <dd>
            <pre><?php echo $this->exception->getFile() ?>:<?php echo $this->exception->getLine() ?></pre>
        </dd>
        <dt>Message:</dt>
        <dd>
            <pre><?php echo $this->escapeHtml($this->exception->getMessage()) ?></pre>
        </dd>
        <dt>Stack trace:</dt>
        <dd>
            <pre><?php echo $this->escapeHtml($this->exception->getTraceAsString()) ?></pre>
        </dd>
    </dl>

    <?php if ($exception = $this->exception->getPrevious()) : ?>

    <hr/>

    <h2>Previous exceptions:</h2>
    <ul>
        <?php $count = 0 ?>
        <?php while ($exception) : ?>
        <li>
            <h3><?php echo get_class($exception) ?></h3>
            <dl>
                <dt>File:</dt>
                <dd>
                    <pre><?php echo $exception->getFile() ?>:<?php echo $exception->getLine() ?></pre>
                </dd>
                <dt>Message:</dt>
                <dd>
                    <pre><?php echo $this->escapeHtml($exception->getMessage()) ?></pre>
                </dd>
                <dt>Stack trace:</dt>
                <dd>
                    <pre><?php echo $this->escapeHtml($exception->getTraceAsString()) ?></pre>
                </dd>
            </dl>
        </li>
        <?php $exception = $exception->getPrevious() ?>
        <?php if (++$count >= 50) : ?>
        <li>There may be more exceptions, but we do not have enough memory to process it.</li>
        <?php break; endif; ?>
        <?php endwhile; ?>
    </ul>

    <?php endif; ?>

    <?php else : ?>
    <h3>No Exception available</h3>
    <?php endif; ?>

    <?php endif; ?>

</section>
<section class="col last-col">
    &nbsp;
</section>
